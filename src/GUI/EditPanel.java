/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;


import java.awt.Component;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JTextField;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

import javax.swing.Timer;
/**
 *
 * @author miw
 */
public class EditPanel extends javax.swing.JFrame {

    
    
    //CREATE AND INIT COMPONENTS
        //AV COMPONENTS
        JLabel lbldiscName =    new JLabel("Title : ");
        JLabel lbldiscVol =    new JLabel("Volume : ");
        JLabel lbldiscSerial =  new JLabel("Serial No : ");
        
       
        
        JTextField txtdiscName = new JTextField(15);
        JTextField txtdiscSerial = new JTextField(15);
        JTextField txtdiscVol = new JTextField(15);
        
        
        //CD COMPONENT
        JLabel lblcdCategory = new JLabel("CD Category : ");
        JLabel lblCDYear = new JLabel("CD Year : ");
        JTextField txtcdCategory = new JTextField(15);
        JTextField txtCDdiscYear = new JTextField(15);
        
        //DVD COMPONENT
        JLabel lbldvdCategory = new JLabel("DVD Category : ");
        JLabel lblDVDYear = new JLabel("DVD Year : ");
        JTextField txtdvdCategory = new JTextField(15);
        JTextField txtdvddiscYear = new JTextField(15);
       
        
         //BOOK COMPONENTS
        JLabel lblbookName =    new JLabel("Title : ");
        JLabel lblbookVol =    new JLabel("Volume : ");
        JLabel lblbookSerial =  new JLabel("Serial No : ");
       
        
        JTextField txtbookName = new JTextField(15);
        JTextField txtbookVol = new JTextField(15);
        JTextField txtbookSerial = new JTextField(15);
       
        
        //NOVEL COMPONENT
        JLabel lblnovelCategory = new JLabel("Novel Category : ");
        JTextField txtnovelCategory = new JTextField(15);
        
        //JOURNAL COMPONENT
        JLabel lbljoCategory = new JLabel("Journal Category : ");
        JTextField txtjoCategory = new JTextField(15);
    
    /**
     * Creates new form EditPanel
     */
        
    String oldStrdata = null;
    Timer timer;
    int i = 0;
    LoadPage editLoad = new LoadPage();  
        
        
    public EditPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtProdType = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtQty = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtProdID = new javax.swing.JTextField();
        txtProdName = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        jbCancel = new javax.swing.JButton();
        jbSave = new javax.swing.JButton();
        mkPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(204, 0, 102));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jLabel4.setText("PRODUCT NAME :");

        txtProdType.setEditable(false);
        txtProdType.setBackground(new java.awt.Color(255, 255, 255));
        txtProdType.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtProdTypeMousePressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jLabel2.setText("TYPE :");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jLabel3.setText("PRODUCT ID :");

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jLabel5.setText("QUANTITY :");

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jLabel6.setText("PRICE :");

        txtProdID.setEditable(false);
        txtProdID.setBackground(new java.awt.Color(255, 255, 255));
        txtProdID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtProdIDMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                    .addComponent(txtProdID)
                    .addComponent(txtProdType)
                    .addComponent(txtProdName)
                    .addComponent(txtQty))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtProdID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProdType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProdName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(162, Short.MAX_VALUE))
        );

        jbCancel.setText("Cancel");
        jbCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelActionPerformed(evt);
            }
        });

        jbSave.setText("Save Changes");
        jbSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mkPanelLayout = new javax.swing.GroupLayout(mkPanel);
        mkPanel.setLayout(mkPanelLayout);
        mkPanelLayout.setHorizontalGroup(
            mkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 499, Short.MAX_VALUE)
        );
        mkPanelLayout.setVerticalGroup(
            mkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbSave))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mkPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mkPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSave)
                    .addComponent(jbCancel))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Bahnschrift", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 102));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit.icon.png"))); // NOI18N
        jLabel1.setText("EDIT PRODUCT");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(407, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(1053, 459));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //METHOD TO DETERMINE THE PRODUCT TYPE
    private void checkprodType(){
        
        if (txtProdType.getText().equals("CD")){
            System.out.println("Product Type : CD");
            int pID = Integer.parseInt(txtProdID.getText());
            String pName = txtProdName.getText();
            int pQty = Integer.parseInt(txtQty.getText());
            double pPrice = Double.parseDouble(txtPrice.getText()); 
            String dName = txtdiscName.getText();
  
            int cdYear = Integer.parseInt(txtCDdiscYear.getText());
            int dVol = Integer.parseInt(txtdiscVol.getText());
            String dCategory = txtcdCategory.getText();
            
            String oldStr = oldStrdata;
            String newStr = pID+","+"CD"+","+pName+","+pQty+","+pPrice+","+
                            dName+","+cdYear+","+dVol+","+dCategory;
            
            
            timer = new Timer(60, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                  i++;
                    if(i==1){
                        editLoad.setVisible(true);
                        editLoad.lblTitle.setText("Processing Changes . . .");
                    }//END IF
                    
                    if (i==15){
                        editLoad.lblTitle.setText("Saving Product ID : " + pID + " ...");
                    }//END IF
                    
                    if (i==20){
                        editLoad.lblTitle.setText("Saving Product Name : " + pName + " ...");
                    }//END IF
                    
                    if (i==25){
                        editLoad.lblTitle.setText("Saving Quantity : " + pQty + " ...");
                    }//END IF
                    
                    if (i==30){
                        editLoad.lblTitle.setText("Saving Price : " + pPrice + " ...");
                    }//END IF
                    
                    if (i==45){
                        editLoad.lblTitle.setText("Finalizing . . . ");
                    }//END IF
                    
                    if (i==65){
                    editLoad.dispose();
                    }//END IF
                    
                    if(i==66){
                        //CALL METHOD SAVEMODIFIEDDATA()
                         //WITH 2 PARAMTER OF OLD DATA AND NEW DATA
                        savemodifiedData(oldStr, newStr);
                       // playExclamation();
                        String message = "Product with ID : "+ pID + "\n" +
                                         "has been successfully updated !" ;
                        new msgBox(message,"SUCCESS").showinfoMsg();
                        dispose();
                    }//END IF
                    
                    if(i>67){

                        timer.stop();
                        i = 0;    
                    }//END IF
            }//END PUBLIC VOID

        });
        timer.start();
            

        }else
            
        if (txtProdType.getText().equals("DVD")){
            System.out.println("Product Type : DVD");
            int pID = Integer.parseInt(txtProdID.getText());
            String pName = txtProdName.getText();
            int pQty = Integer.parseInt(txtQty.getText());
            double pPrice = Double.parseDouble(txtPrice.getText()); 
            String dName = txtdiscName.getText();
          
            int dvdYear = Integer.parseInt(txtdvddiscYear.getText());
            int dVol = Integer.parseInt(txtdiscVol.getText());
            String dCategory = txtdvdCategory.getText();
            
            String oldStr = oldStrdata;
            String newStr = pID+","+"DVD"+","+pName+","+pQty+","+pPrice+","+
                            dName+","+dvdYear+","+dVol+","+dCategory;
            timer = new Timer(60, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                  i++;
                    if(i==1){
                        editLoad.setVisible(true);
                        editLoad.lblTitle.setText("Processing Changes . . .");
                    }//END IF
                    
                    if (i==15){
                        editLoad.lblTitle.setText("Saving Product ID : " + pID + " ...");
                    }//END IF
                    
                    if (i==20){
                        editLoad.lblTitle.setText("Saving Product Name : " + pName + " ...");
                    }//END IF
                    
                    if (i==25){
                        editLoad.lblTitle.setText("Saving Quantity : " + pQty + " ...");
                    }//END IF
                    
                    if (i==30){
                        editLoad.lblTitle.setText("Saving Price : " + pPrice + " ...");
                    }//END IF
                    
                    if (i==45){
                        editLoad.lblTitle.setText("Finalizing . . . ");
                    }//END IF
                    
                    if (i==65){
                    editLoad.dispose();
                    }//END IF
                    
                    if(i==66){
                        savemodifiedData(oldStr, newStr);
                        String message = "Product with ID : "+ pID + "\n" +
                                         "has been successfully updated !" ;
                        new msgBox(message,"SUCCESS").showinfoMsg();
                        dispose();
                    }//END IF
                    
                    if(i>67){

                        timer.stop();
                        i = 0;    
                    }//END IF
                }//END PUBLIC VOID

                
            });
            timer.start();
            
        }else
            
        if (txtProdType.getText().equals("Novel")){
            System.out.println("Product Type : Novel");
            int pID = Integer.parseInt(txtProdID.getText());
            String pName = txtProdName.getText();
            int pQty = Integer.parseInt(txtQty.getText());
            double pPrice = Double.parseDouble(txtPrice.getText()); 
            String bName = txtbookName.getText();
            int bSerial = Integer.parseInt(txtbookSerial.getText());

            int bVol = Integer.parseInt(txtbookVol.getText());
            String bCategory = txtnovelCategory.getText();
            
            String oldStr = oldStrdata;
            String newStr = pID+","+"Novel"+","+pName+","+pQty+","+pPrice+","+
                            bName+","+bSerial+","+bVol+","+bCategory;
            
            
            
            timer = new Timer(60, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                  i++;
                    if(i==1){
                        editLoad.setVisible(true);
                        editLoad.lblTitle.setText("Processing Changes . . .");
                    }//END IF
                    
                    if (i==15){
                        editLoad.lblTitle.setText("Saving Product ID : " + pID + " ...");
                    }//END IF
                    
                    if (i==20){
                        editLoad.lblTitle.setText("Saving Product Name : " + pName + " ...");
                    }//END IF
                    
                    if (i==25){
                        editLoad.lblTitle.setText("Saving Quantity : " + pQty + " ...");
                    }//END IF
                    
                    if (i==30){
                        editLoad.lblTitle.setText("Saving Price : " + pPrice + " ...");
                    }//END IF
                    
                    if (i==45){
                        editLoad.lblTitle.setText("Finalizing . . . ");
                    }//END IF
                    
                    if (i==65){
                    editLoad.dispose();
                    }//END IF
                    
                    if(i==66){
                        savemodifiedData(oldStr, newStr);
                        
                        String message = "Product with ID : "+ pID + "\n" +
                                         "has been successfully updated !" ;
                        new msgBox(message,"SUCCESS").showinfoMsg();
                        dispose();
                    }//END IF
                    
                    if(i>67){

                        timer.stop();
                        i = 0;    
                    }//END IF
                }//END PUBLIC VOID

               
            });
            timer.start();
            
        }else
        if (txtProdType.getText().equals("Journal")){
            System.out.println("Product Type : Journal");
             int pID = Integer.parseInt(txtProdID.getText());
            String pName = txtProdName.getText();
            int pQty = Integer.parseInt(txtQty.getText());
            double pPrice = Double.parseDouble(txtPrice.getText()); 
            String bName = txtbookName.getText();
            int bSerial = Integer.parseInt(txtbookSerial.getText());

            int bVol = Integer.parseInt(txtbookVol.getText());
            String bCategory = txtjoCategory.getText();
            
            String oldStr = oldStrdata;
            String newStr = pID+","+"Journal"+","+pName+","+pQty+","+pPrice+","+
                            bName+","+bSerial+","+bVol+","+bCategory;

            
            timer = new Timer(60, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                  i++;
                    if(i==1){
                        editLoad.setVisible(true);
                        editLoad.lblTitle.setText("Processing Changes . . .");
                    }//END IF
                    
                    if (i==15){
                        editLoad.lblTitle.setText("Saving Product ID : " + pID + " ...");
                    }//END IF
                    
                    if (i==20){
                        editLoad.lblTitle.setText("Saving Product Name : " + pName + " ...");
                    }//END IF
                    
                    if (i==25){
                        editLoad.lblTitle.setText("Saving Quantity : " + pQty + " ...");
                    }//END IF
                    
                    if (i==30){
                        editLoad.lblTitle.setText("Saving Price : " + pPrice + " ...");
                    }//END IF
                    
                    if (i==45){
                        editLoad.lblTitle.setText("Finalizing . . . ");
                    }//END IF
                    
                    if (i==65){
                    editLoad.dispose();
                    }//END IF
                    
                    if(i==66){
                        savemodifiedData(oldStr, newStr);
                       
                        String message = "Product with ID : "+ pID + "\n" +
                                         "has been successfully updated !" ;
                        new msgBox(message,"SUCCESS").showinfoMsg();
                        dispose();
                    }//END IF
                    
                    if(i>67){

                        timer.stop();
                        i = 0;    
                    }//END IF
                }//END PUBLIC VOID

                private void dispose() {
                    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }
            });
            timer.start();
            
        }//END IF
        
    }//END METHOD
    
    
    private void jbCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelActionPerformed
        // TODO add your handling code here:
        dispose();
      
    }//GEN-LAST:event_jbCancelActionPerformed

    private void jbSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSaveActionPerformed
        // TODO add your handling code here:
        dispose();
        checkprodType();
    }//GEN-LAST:event_jbSaveActionPerformed

    private void txtProdIDMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtProdIDMousePressed
        // TODO add your handling code here:

        new msgBox("Product ID cannot be modified.\nIt is an auto generated by the program !","WARNING").showwarningMsg();
    }//GEN-LAST:event_txtProdIDMousePressed

    private void txtProdTypeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtProdTypeMousePressed
        // TODO add your handling code here:

        new msgBox("Product Type cannot be modified.","WARNING").showwarningMsg();
    }//GEN-LAST:event_txtProdTypeMousePressed

    //METHOD TO SAVE NEW DATA
    private void savemodifiedData(String oldStr, String newStr){
    String strPath = "C:/Inventory.txt";
        File fileToBeModified = new File(strPath);
         
        String oldContent = "";
        BufferedReader reader = null;
        FileWriter writer = null;
         
        try
        {   
            //READ LINES OF TXT FILE
            reader = new BufferedReader(new FileReader(fileToBeModified));
            String line = reader.readLine();
             
            while (line != null) 
            {
                oldContent = oldContent + line + System.lineSeparator();
                 
                line = reader.readLine();
            }//ENDDO
             
            //REPLACING WITH NEW DATA
            String newContent = oldContent.replaceAll(oldStr, newStr);

            //REWRITE THE NEW DATA 
            writer = new FileWriter(fileToBeModified);
            writer.write(newContent);
            System.out.println("DONE !");
        }
        catch (IOException e)
        {
            e.printStackTrace();
        }//END TRY CATCH
        finally{
            try
            {
                //CLOSE READER & WRITER
                reader.close();
                writer.close();
            } 
            catch (IOException e) 
            {
                e.printStackTrace();
            }//END NESTED TRY CATCH     
        }//END FINALLY
    }//END METHOD SAVEMODIFIEDDATA
    
    public void loadData(int n){
      String strPath = "C:/Inventory.txt";
      n = n-1;
      String line;
      try (BufferedReader br = new BufferedReader(new FileReader(strPath))) {
          for (int i = 0; i < n; i++)
              br.readLine();
          line = br.readLine();
          System.out.println(line);
          
          //PASS OLD STRING DATA
          oldStrdata = line;
          if (line.contains("Journal")){
               makeJournalPanel();
               System.out.println("This is a journal");
               String[] joData = line.split(",");
               System.out.println("Product ID     : " + joData[0]);
               System.out.println("Product Type   : " + joData[1]);
               System.out.println("Product Name   : " + joData[2]);
               System.out.println("Product Qty    : " + joData[3]);
               System.out.println("Product Price  : " + joData[4]);
               System.out.println("Title          : " + joData[5]);
               System.out.println("Volume         : " + joData[6]);
               System.out.println("Year           : " + joData[7]);
               System.out.println("Category       : " + joData[8]);
               System.out.println("Serial Number  : " + joData[9]);
               
               
               txtProdID.setText(joData[0]);
               txtProdType.setText(joData[1]);
               txtProdName.setText(joData[2]);
               txtQty.setText(joData[3]);
               txtPrice.setText(joData[4]);
               txtbookName.setText(joData[5]);
               txtbookVol.setText(joData[6]);
               txtbookSerial.setText(joData[7]);
               txtjoCategory.setText(joData[8]);
               
               
          }else
          if(line.contains("Novel")){
              makeNovelPanel();
               System.out.println("This is a novel");
               String[] joData = line.split(",");
               System.out.println("Product ID     : " + joData[0]);
               System.out.println("Product Type   : " + joData[1]);
               System.out.println("Product Name   : " + joData[2]);
               System.out.println("Product Qty    : " + joData[3]);
               System.out.println("Product Price  : " + joData[4]);
               System.out.println("Title          : " + joData[5]);
               System.out.println("Volume         : " + joData[6]);

               System.out.println("Serial Number  : " + joData[7]);
               System.out.println("Category       : " + joData[8]);

               
               
               txtProdID.setText(joData[0]);
               txtProdType.setText(joData[1]);
               txtProdName.setText(joData[2]);
               txtQty.setText(joData[3]);
               txtPrice.setText(joData[4]);
               txtbookName.setText(joData[5]);
               txtbookVol.setText(joData[6]);
                txtbookSerial.setText(joData[7]);
               txtnovelCategory.setText(joData[8]);
               
               
          }else
          if(line.contains("CD")){
              makeCDPanel();
               System.out.println("This is a CD");
               String[] cdData = line.split(",");
               System.out.println("Product ID     : " + cdData[0]);
               System.out.println("Product Type   : " + cdData[1]);
               System.out.println("Product Name   : " + cdData[2]);
               System.out.println("Product Qty    : " + cdData[3]);
               System.out.println("Product Price  : " + cdData[4]);
               System.out.println("Title          : " + cdData[5]);
               System.out.println("Volume         : " + cdData[6]);
               System.out.println("CDCategory     : " + cdData[7]);
               System.out.println("CD Year        : " + cdData[8]);
              
               
               
               txtProdID.setText(cdData[0]);
               txtProdType.setText(cdData[1]);
               txtProdName.setText(cdData[2]);
               txtQty.setText(cdData[3]);
               txtPrice.setText(cdData[4]);
               txtdiscName.setText(cdData[5]);
               txtdiscVol.setText(cdData[6]);
               txtcdCategory.setText(cdData[7]);
               txtCDdiscYear.setText(cdData[8]);
               
           
          }else
          if(line.contains("DVD")){
              makeDVDPanel();
               System.out.println("This is a DVD");
               String[] dvdData = line.split(",");
               System.out.println("Product ID     : " + dvdData[0]);
               System.out.println("Product Type   : " + dvdData[1]);
               System.out.println("Product Name   : " + dvdData[2]);
               System.out.println("Product Qty    : " + dvdData[3]);
               System.out.println("Product Price  : " + dvdData[4]);
               System.out.println("Title          : " + dvdData[5]);
               System.out.println("Volume         : " + dvdData[6]);
             
               System.out.println("Category       : " + dvdData[7]);
               System.out.println("DVD Year       : " + dvdData[8]);
               
               
               
               
               txtProdID.setText(dvdData[0]);
               txtProdType.setText(dvdData[1]);
               txtProdName.setText(dvdData[2]);
               txtQty.setText(dvdData[3]);
               txtPrice.setText(dvdData[4]);
               txtdiscName.setText(dvdData[5]);
               txtdiscVol.setText(dvdData[6]);
           
               txtdvdCategory.setText(dvdData[7]);
               txtdvddiscYear.setText(dvdData[8]);
              
              
               
          }else
           if(line.contains("null")){
               
            JTextField temp=null;
                for(Component clr:mkPanel.getComponents()){ //CLEAR ALL TEXTFIELD IN JPANEL3
                if(clr.getClass().toString().contains("javax.swing.JTextField")){
                    temp=(JTextField)clr;
                    temp.setText("");
                }//END IF
                }//END FOR

                for(Component clr:jPanel3.getComponents()){ //CLEAR ALL TEXTFIELD IN JPANEL3
                if(clr.getClass().toString().contains("javax.swing.JTextField")){
                    temp=(JTextField)clr;
                    temp.setText("");
                }//END IF
                }//END FOR
                dispose();
                jbSave.setEnabled(false);
                new msgBox("Product is not available \nor has been removed !\n","ERROR").showerrorMsg();
                
           }//END IF

        //END IF

      }
      catch(IOException e){
        System.out.println(e);
      }//END TRY CATCH
        
    }//END METHOD
    
    
    //METHOD TO PLAY EXCLAMATION SOUND FOR MSGBOX

   
    
    //PANEL TO SHOW TEXTFIELD FOR PRODUCT CD
     private void makeCDPanel(){
        mkPanel.removeAll();
        mkPanel.setLayout(new GridBagLayout());
        mkPanel.setBorder(BorderFactory.createTitledBorder("CD"));
        
        GridBagConstraints c = new GridBagConstraints();  
        
        //Y-AXIS = 0 | FOR CDName
        //GRID (0,0)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 0;  
        mkPanel.add(lbldiscName,c);
        
        //GRID (1,0)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 0;  
        mkPanel.add(txtdiscName,c);
        
        //Y-AXIS = 1  | FOR CATEGORY
           //GRID (0,1)
        c.insets = new Insets(18, 0, 0, 0);//SET TOP PADDING
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 1; 
        mkPanel.add(lblcdCategory,c);
        
      //GRID (1,1)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 1;
        mkPanel.add(txtcdCategory,c);
        
        //Y-AXIS = 2 | FOR VOLUME
        //GRID (0,2)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 2;
        mkPanel.add(lbldiscVol,c);
        
        //GRID (1,2)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 2;
        mkPanel.add(txtdiscVol,c);
        
         //Y-AXIS = 3 | FOR YEAR
          //GRID (0,3)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 3;
        mkPanel.add(lblCDYear,c);
        
        //GRID (1,3)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 3;
        mkPanel.add(txtCDdiscYear,c);
        
        
        //REFRESH PANEL
        mkPanel.revalidate();
        mkPanel.repaint();
 }//END METHOD CD PANEL
     
     //PANEL TO SHOW TEXTFIELD FOR PRODUCT DVD
     private void makeDVDPanel(){
        mkPanel.removeAll();
        mkPanel.setLayout(new GridBagLayout());
        mkPanel.setBorder(BorderFactory.createTitledBorder("DVD"));
        
        GridBagConstraints c = new GridBagConstraints();  
        
        //Y-AXIS = 0 | FOR DVDName
        //GRID (0,0)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 0;  
        mkPanel.add(lbldiscName,c);
        
        //GRID (1,0)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 0;  
        mkPanel.add(txtdiscName,c);
        
        
        
        //Y-AXIS = 1 | FOR YEAR
        //GRID (0,1)
        c.insets = new Insets(18, 0, 0, 0);//SET TOP PADDING
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 1; 
        mkPanel.add(lblDVDYear,c);
        
        //GRID (1,2)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 1;
        mkPanel.add(txtdvddiscYear,c);
        
        //Y-AXIS = 3 | FOR VOLUME
        //GRID (0,3)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 2;
        mkPanel.add(lbldiscVol,c);
        
        //GRID (1,3)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 2;
        mkPanel.add(txtdiscVol,c);
        
        //Y-AXIS = 4 | FOR CATEGORY
        //GRID (0,4)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 3;
        mkPanel.add(lbldvdCategory,c);
        
        //GRID (1,4)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 3;
        mkPanel.add(txtdvdCategory,c);
        
        
        //REFRESH PANEL
        mkPanel.revalidate();
        mkPanel.repaint();
 }//END METHOD DVD PANEL
     
     
     //PANEL TO SHOW TEXTFIELD FOR PRODUCT NOVEL
     private void makeNovelPanel(){
        mkPanel.removeAll();
        mkPanel.setLayout(new GridBagLayout());
        mkPanel.setBorder(BorderFactory.createTitledBorder("Novel"));
        
        GridBagConstraints c = new GridBagConstraints();  
        
        //Y-AXIS = 0 | FOR bookName
        //GRID (0,0)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 0;  
        mkPanel.add(lblbookName,c);
        
        //GRID (1,0)
        c.insets = new Insets(18, 0, 0, 0);//SET TOP PADDING
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 0;  
        mkPanel.add(txtbookName,c);
        
        //Y-AXIS = 1 | FOR SERIAL
        //GRID (0,1)
        c.insets = new Insets(18, 0, 0, 0);//SET TOP PADDING
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 1;  
        mkPanel.add(lblbookSerial,c);
        
        //GRID (1,1)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 1;  
        mkPanel.add(txtbookSerial,c);
        
        //Y-AXIS = 2 | FOR year
        //GRID (0,2)

        
        //Y-AXIS = 3 | FOR VOLUME
        //GRID (0,3)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 2;
        mkPanel.add(lblbookVol,c);
        
        //GRID (1,3)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 2;
        mkPanel.add(txtbookVol,c);
        
        //Y-AXIS = 4 | FOR CATEGORY
        //GRID (0,4)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 3;
        mkPanel.add(lblnovelCategory,c);
        
        //GRID (1,4)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 3;
        mkPanel.add(txtnovelCategory,c);
        
        
        //REFRESH PANEL
        mkPanel.revalidate();
        mkPanel.repaint();
        
        
 }//END METHOD JOURNAL PANEL
     
     //PANEL TO SHOW TEXTFIELD FOR PRODUCT NOVEL
     private void makeJournalPanel(){
        mkPanel.removeAll();
        mkPanel.setLayout(new GridBagLayout());
        mkPanel.setBorder(BorderFactory.createTitledBorder("Journal"));
        
        GridBagConstraints c = new GridBagConstraints();  
        
        //Y-AXIS = 0 | FOR Name
        //GRID (0,0)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 0;  
        mkPanel.add(lblbookName,c);
        
        //GRID (1,0)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 0;  
        mkPanel.add(txtbookName,c);
        
        //Y-AXIS = 1 | FOR Serial
        //GRID (0,1)
        c.insets = new Insets(18, 0, 0, 0);//SET TOP PADDING
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 1;  
        mkPanel.add(lblbookSerial,c);
        
        //GRID (1,1)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 1;  
        mkPanel.add(txtbookSerial,c);
        
     
        
        //Y-AXIS = 2 | volume
        //GRID (0,2)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 2;
        mkPanel.add(lblbookVol,c);
        
        //GRID (1,2)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 2;
        mkPanel.add(txtbookVol,c);
        
        //Y-AXIS = 4 | FOR category
        //GRID (0,4)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 3;
        mkPanel.add(lbljoCategory,c);
        
        //GRID (1,3)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 3;
        mkPanel.add(txtjoCategory,c);
        
        
        //REFRESH PANEL
        mkPanel.revalidate();
        mkPanel.repaint();
 }//END METHOD JOURNAL PANEL
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbSave;
    private javax.swing.JPanel mkPanel;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtProdID;
    private javax.swing.JTextField txtProdName;
    private javax.swing.JTextField txtProdType;
    private javax.swing.JTextField txtQty;
    // End of variables declaration//GEN-END:variables
}
